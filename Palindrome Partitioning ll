import java.util.* ;
import java.io.*; 
public class Solution {

	public static int palindromePartitioning(String str) {
	    // Write your code here
		int n=str.length();
		int[] dp=new int[n];
		Arrays.fill(dp,-1);
		return f(0,n,str,dp)-1;
	}

	public static int f(int i, int n, String str, int[] dp)
	{
		if(i==n)
		{
			return 0;
		}

		if(dp[i]!=-1)
		{
			return dp[i];
		}

		int mincost=Integer.MAX_VALUE;

		for(int j=i;j<n;j++)
		{
			if(ispalindrome(i,j,str))
			{
				int cost=1+f(j+1,n,str,dp);
				mincost=Math.min(mincost,cost);

			}
		}

		return dp[i]=mincost;
	}

	public static boolean ispalindrome(int i, int j, String s)
	{
		while(i<j)
		{
			if(s.charAt(i)!=s.charAt(j))
			{
				return false;
			}
			i++;
			j--;
		}

		return true;
	}
}
